-- 2022-12-05 오라클
/*
      1. 데이터베이스 시스템 (DBMS) => 24page
         => 데이터를 모아서 관리 => 검색, 수정, 삭제, 추가가 가능하게 만든 시스템
         => 오라클 / MySQL / MS-SQL / DB2 / MariaDB
      2. 데이터베이스 개념과 특징
         => 통합한 데이터 (데이터베이스 => 폴더)
            => 폴더 : 데이터베이스
            => 테이블 : 파일 (구분이 되어 있다 => 컬럼)
            => ROW(한줄) => RECORD, Tuple => 자바의 객체
               = 오라클의 단위 => ROW(수정, 삭제, 추가 ==> 한 줄 전체)
         => 저장된 데이터 (이미지 : 데이터를 볼 수 없다(보안)), 하드디스크에 저장)
                            응용프로그램(JDBC)
                                 | ==> SQL (오라클과 통신) ***
                               오라클
                                 |
                             하드디스크
         => 운영데이터 : 사이트에 필요한 데이터 검색할 목적으로 저장된 데이터에 접근 (공유)
         => 공유된 데이터 : 접속자 모든 사람이 모든 데이터를 공유할 목적 (오라클 : static) => 팀별 프로젝트 => 오라클 1개만 사용
            (211.63.89.131) => 외부에서도 접근이 가능
         
         데이터베이스 특징
         => 실시간 접근성 (오라클은 항상 열어둔다) => 자동 실행
         => 계속적인 변화 (상품 올리기, 댓글 쓰기...)
         => 동시 공유
         => 내용에 따른 참조 (자바는 주소참조)
      3. 시스템의 구성 요소
         => DBMS (실제 저장된 데이터와 응용프로그램과 연결) => 오라클
         => 실제 저장된 데이터 = 데이터베이스 (XE)
         => 데이터 모델 : 데이터를 저장하는 기법
                         예) 문자, 숫자, 날짜
                         문자형 : CHAR(1 ~ 2000byte) => 고정형, VARCHAR2(1 ~ 4000byte) => 가변형, CLOB (4기가)
                         숫자형 : NUMBER : 정수, 실수
                         날짜형 : DATE, TIMESTAMP
                         기타형 : BFILE(file형태 => 4기가),  BLOB(binary형태 => 4기가) => 동영상, 사진
                         ==> 클래스의 데이터 설계
         => 키에 대한 종류
            = 기본키 (중복을 허용하지 않는 키) => ID, 대부분은 숫자로 저장 (자동 증가) => PRIMARY KEY(모든 테이블은 기본키를 1개 이상 포함)
                                              무결성의 원칙
            = 후보키 : 기본키를 대체하는 키 (email, tell) => 주민번호 (사용금지, 공기업/은행은 가능) => UNIQUE(null값을 허용)
            = 외래키(참조키) : 기존에 있는 데이터값을 참조 => FOREGIN KEY)
         => 제약조건 : NOT NULL, PRIMARY KEY, UNIQUE, CHECK, FORGIN KEY, DEFAULT => 원하는 데이터만 첨부
            = 유효성 검사
         => DDL (테이블 제작시에) => 연결 (데이터베이스 모델링)
      4. 데이터베이스의 발전 과정
         => 파일시스템 : 구분이 없다 => 관리하기 어렵다 (연결 관계를 만들기 어렵다, 보안에 취약하다
         => 데이터베이스 시스템 : 관리가 쉽다, 연결관계, 보안이 뛰어나다)
         => 웹 데이터베이스 시스템 : *****
         => 분산 데이터베이스 시스템 : 백업
                ----------------- 장점 : 중복의 최소화, 일관성, 독립성, 관리 기능, 프로그램 연결(자바 => ojdbc)
         => i, g, c
            8i, 9i, 10g, 11g, 12c ~ 18c
            i => internet
            g => grid (편집툴)
            c = component (기능) => PL/SQL
      5. 45page
           응용프로그램 (자바)
               | sql ==> 데이터베이스 언어 ****
             오라클
               | read/write
     하드디스크 (실제 저장된 데이터)
     6. 46page => 데이터베이스 언어 (SQL) => 문자열
        ------------
        SQL 종류
        1) DML (데이터 조작 언어)
           = DQL
             명령어 : SELECT => 데이터를 검색할 목적
                     => 형식, 연산자, 내장함수, JOIN, SubQuery
                     => 컬럼 대신 사용, 테이블 대신 사용
                        ------------  --------------
                         스칼라서브쿼리    인라인뷰
           = DML
             명령어 : 
                        INSERT => 데이터 추가
                        UPDATE => 데이터 수정
                        DELETE => 데이터 삭제
                        MERGE  => 데이터 병합
        2) DDL (데이터 정의 언어)
           = 테이블, 뷰 시퀀스, 인덱스, 시노임, PL/SQL(Function, Procedure, Trigger)를 만들때 사용
             명령어 :
                        CREATE => 생성 => CREATE TABLE (테이블 생성), CREATE VIEW, CREATE INDEX ...
                        ALTER : 수정 (데이터를 설정 ==> 추가 (컬럼), 수정, 삭제, 이름변경)
                                                      ADD       MODIFY DROP  RENAME
                        DROP : 테이블을 통째로 삭제
                        TRUNCATE : 테이블은 그대로 유지 => 데이터 전체를 삭제 => 잘라내기
                        RENAME : 테이블 변경
        3) DCL (데이터 제어 언어)
           = GRANT : 권한 부여 (VIEW) ==> system, sysdba, hr(일반계정)
           = REVOKE : 권한 해제
        4) TCL (트랜잭션 제어 언어)
           = COMMIT : 정삭적으로 저장
           = ROLLAACK : 비정상 수행 => 명령을 취소시에 사용
           
        사용자
        ------------------------------------------------------
         일반사용자 => 이미 만들어진 프로그램을 사용 (USER) => SQL, 언어 (X)
        ------------------------------------------------------
         SQL사용자 => 프로젝트시에 SQL을 어느 정도하는 사람 (데이터베이스 관련 프로그램 제작)
        ------------------------------------------------------
         ** 응용프로그래머 => 언어 + SQL
                            오라클 연동 (웹 개발 => 데이터베이스 연동 : 80%)
        ------------------------------------------------------
         데이터베이스 관리자 (DBA) => SQL, DBMS지식 
        ------------------------------------------------------
        
        데이터베이스 구조
             개념스키마 (설계만 한 상태 => 어떤 데이터가 있는지 확인)
                예) 맛집 => 이름, 전화, 주소, 음식종류, 메뉴...
             논리스키마
                예) 데이터형 설정 (이름 VARCHAR2, 전화 VARCHAR2 ...)
             물리스키마
                예) 이름 VARCHAR2(200)...
                
        ---------------------------------------------------------------------
         컬럼명                id
        ---------------------------------------------------------------------
         키종류                PK
        ---------------------------------------------------------------------
         참조테이블             X
        ---------------------------------------------------------------------
         참조데이터             X
        ---------------------------------------------------------------------
         체크속성               X
        ---------------------------------------------------------------------
         데이터형            VARCHAR2
        ---------------------------------------------------------------------
         데이터크기            20
        ---------------------------------------------------------------------
        
        => 69page 릴레이션 (테이블) : 관련된 데이터를 모아둔 곳 (게시판, 회원, 맛집, 여행...) => 여러개를 사용 (정규화) => 중복을 최소화
            = 특징                                                                       ------------------- JOIN
               => 파일, 데이터베이스 : 폴더
               => 유일값을 가지고 있다 (XE)
               => 컬럼은 순서가 없다
               => 데이터 순서가 없다
               => 이차원 구조로 되어 있다 (컬럼, 컬럼에 해당되는 값을 가지고 있다)
            1) 테이블의 구조
               -----------------------------------------------------
                    ID          NAME        SEX    ==> 컬럼으로 구분
               -----------------------------------------------------
                   aaa          홍길동       남자   =======> RECORD, ROW, TUPLE  => 자바 (객체, 인스턴스)
               -----------------------------------------------------
                   bbb          심청이       여자   =======> RECORD, ROW, TUPLE
               -----------------------------------------------------
*/

select * from emp;